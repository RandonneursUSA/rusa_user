<?php

/**
 * @file rusa_user.module
 * legacy hook support
 */

use Drupal\Core\Hook\Attribute\LegacyHook;
use Drupal\rusa_user\HookRusaUserHooks;

        
/**
 * Implements hook_help().
 */
 
#[LegacyHook]
function rusa_user_help($route_name, RouteMatchInterface $route_match) {
	return \Drupal::service(RusaUserHooks::class)->help($route_name, $route_match);
}

/**
 * Implements hook_entity_update()
 *
 * Auto fill the user dispaly name with first + last
 *
 */
#[LegacyHook]
function rusa_user_entity_presave(EntityInterface $entity) {
	\Drupal::service(RusaUserHooks::class)->entity_presave($entity);
}

/* 
 * Implements hook_form_FORM_ID_alter
 *
 * Add a custom login validation to check for expired RUSA membership
 */
#[LegacyHook]
function rusa_user_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
    \Drupal::service(RusaUserHooks::class)->form_user_login_form_alter(&$form, FormStateInterface $form_state);
}

/**
 * Implements hook_user_login
 *
 * Sync user data at login
 *
 */
#[LegacyHook]
function rusa_user_user_login($account) { 
    // Sync member data from GDBM
    \Drupal::service(RusaUserHooks::class)->user_login($account->id());
}

/**
 * hook_mail
 *
 * Provides the template for email notifications
 *
 */
#[LegacyHook]
function rusa_user_mail($key, &$message, $params) {
	\Drupal::service(RusaUserHooks::class)->mail($key, &$message, $params);
}

/**
 * Implements hook_menu_links_discovered_alter().
 *
 * Point to our menu plugin to change the log in link text
 */
#[LegacyHook]
function rusa_user_menu_links_discovered_alter(&$links) {
    \Drupal::service(RusaUserHooks::class)->menu_links_discovered_alter(&$links);
}

/**
 * Implements hook_cron
 *
 * Update users email from members database
 */
#[LegacyHook]
function rusa_user_cron() {
     \Drupal::service(RusaUserHooks::class)->cron();
}


